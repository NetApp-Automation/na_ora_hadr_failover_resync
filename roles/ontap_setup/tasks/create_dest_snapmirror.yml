##################################################################
##################################################################
- block:
    - name: Create Snapmiror Policy
      na_ontap_snapmirror_policy:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        policy_name: "{{ snapmirror_policy }}"
        policy_type: "async_mirror"
        comment: "Created by Ansible"
        https: true
        validate_certs: false
      tags:
        - ontap_snapmirror_policy 

    - name: Disable default snapshot policy at primary
      na_ontap_ssh_command:
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        hostname: "{{ src_cluster_ip }}"
        command: snapshot policy modify -policy "{{ item }}" -enabled false
        privilege: admin
      with_items:
        - "{{ default_snapshot_policy }}"
      tags:
        - ontap_disable_default_snapshot_p

    - name: Set password for vsadmin user at primary FSx
      na_ontap_user:
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        state: present
        vserver: "{{ src_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: yes
        name: vsadmin
        set_password: "{{ src_snapadmin_password }}"
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_p

    - name: Unlock vsadmin user at primary FSx
      na_ontap_user:
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        state: present
        vserver: "{{ src_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: no
        name: vsadmin
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_p

    - name: Set password for vsadmin user at standby FSx
      na_ontap_user:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: yes
        name: vsadmin
        set_password: "{{ dst_snapadmin_password }}"
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_s

    - name: Unlock vsadmin user at standby FSx
      na_ontap_user:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: no
        name: vsadmin
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_s

    - name: Create target Oracle volumes for SnapMirror
      na_ontap_volume:
        hostname: "{{ dst_vserver_mgmt_lif }}"
        username: "{{ dst_snapadmin_username }}"
        password: "{{ dst_snapadmin_password}}"
        state: present
        vserver: "{{ dst_vserver }}"
        policy: default
        name: "{{ 'dr_' + item.vol_name }}"
        size: "{{ item.size }}"
        type: DP
        aggregate_name: "{{ item.aggr_name }}"
        space_guarantee: none
        percent_snapshot_space: 0
        https: true
        validate_certs: false
        encrypt: no
        use_rest: auto
      with_items:
        - "{{ src_orabinary_vols }}"
        - "{{ src_db_vols }}"
        - "{{ src_archivelog_vols }}"
      tags:
        - ontap_create_target_vols

    - name: Create ONTAP/ONTAP SnapMirror
      netapp.ontap.na_ontap_snapmirror:
        state: present
        source_endpoint:
          cluster: "{{ src_cluster_name }}"
          path: "{{ src_vserver}}:{{ item.vol_name }}"
        destination_endpoint:
          cluster: "{{ dst_cluster_name }}"
          path: "{{ dst_vserver }}:dr_{{ item.vol_name }}"
        policy: "{{ snapmirror_policy }}"
        initialize: true
        hostname: "{{ dst_vserver_mgmt_lif }}"
        username: "{{ dst_snapadmin_username }}"
        password: "{{ dst_snapadmin_password }}"
        https: true
        validate_certs: false
        use_rest: always
      register: snapmirror_create
      with_items:
        - "{{ src_orabinary_vols }}"
        - "{{ src_db_vols }}"
        - "{{ src_archivelog_vols }}"
      tags:
        - ontap_snapmirror_create

    - name: Print all available facts
      ansible.builtin.debug:
        var: snapmirror_create

  tags:
    - ontap_snapmirror  
  rescue:
    - name: Failure
      fail:
        msg:
        - Create destination volume for SnapMirror failed with error
        - Possible troubleshooting steps:
        - 1. Check if ONTAP API is reachable
        - 2. Check if variables defined adhere to the guidelines
