##################################################################
##################################################################
- block:
#    - name: Create Snapmiror Policy
#      na_ontap_snapmirror_policy:
#        hostname: "{{ dst_cluster_ip }}"
#        username: "{{ dst_cluster_username }}"
#        password: "{{ dst_cluster_password }}"
#        state: present
#        vserver: "{{ dst_vserver }}"
#        policy_name: "{{ snapmirror_policy }}"
#        policy_type: async_mirror
#        comment: "Created by Ansible"
#        https: true
#        validate_certs: false
#      tags:
#        - ontap_snapmirror_policy 

#    - name: Obtain Oracle Consistency Group Volumes
#      set_fact:
#        src_cg_vols: "{{ src_orabinary_vols.vol_name + src_db_vols.vol_name + src_archivelog_vols.vol_name }}"
#    - debug:
#        msg: "Source Consistency Group Volumes {{ src_cg_vols }}"

    - name: Set password for vsadmin user at primary FSx
      na_ontap_user:
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        state: present
        vserver: "{{ src_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: yes
        name: vsadmin
        set_password: "{{ src_snapadmin_password }}"
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_p

    - name: Unlock vsadmin user at primary FSx
      na_ontap_user:
        hostname: "{{ src_cluster_ip }}"
        username: "{{ src_cluster_username }}"
        password: "{{ src_cluster_password }}"
        state: present
        vserver: "{{ src_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: no
        name: vsadmin
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_p

    - name: Set password for vsadmin user at standby FSx
      na_ontap_user:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: yes
        name: vsadmin
        set_password: "{{ dst_snapadmin_password }}"
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_s

    - name: Unlock vsadmin user at standby FSx
      na_ontap_user:
        hostname: "{{ dst_cluster_ip }}"
        username: "{{ dst_cluster_username }}"
        password: "{{ dst_cluster_password }}"
        state: present
        vserver: "{{ dst_vserver }}"
        applications: http,ontapi,ssh
        authentication_method: password
        role_name: vsadmin
        lock_user: no
        name: vsadmin
        https: true
        validate_certs: false
      tags:
        - ontap_unlock_svm_admin_s

    - name: Create ONTAP/ONTAP SnapMirror
      na_ontap_snapmirror:
        hostname: "{{ dst_vserver_mgmt_lif }}"
        username: "{{ dst_snapadmin_username }}"
        password: "{{ dst_snapadmin_password }}"
        state: present
        source_endpoint:
#          cluster: "{{ src_cluster_name }}"
          path: "{{ src_vserver + ':' + item.vol_name }}"
        destination_endpoint:
#          cluster: "{{ dst_cluster_name }}"
          path: "{{ dst_vserver + ':' + 'hr_' + item.vol_name }}"
        initialize: true
        create_destination:
          enabled: true
#        policy: "{{ snapmirror_policy }}"
        relationship_type: extended_data_protection
        https: true
        validate_certs: false
        use_rest: always
      register: snapmirror_create
      with_items:
        - "{{ src_orabinary_vols }}"
        - "{{ src_db_vols }}"
        - "{{ src_archivelog_vols }}"
      async: 600
      poll: 0
      tags:
        - ontap_snapmirror_create

    - name: Wait for Snapmirrors to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: snapmirror_jobs
      until: snapmirror_jobs.finished
      delay: 5  
      retries: 100
      with_items: "{{ snapmirror_create.results }}"
      tags:
        - ontap_snapmirror_create

  tags:
    - ontap_snapmirror  
  rescue:
    - name: Failure
      fail:
        msg:
        - Create destination volume for SnapMirror failed with error
        - Possible troubleshooting steps:
        - 1. Check if ONTAP API is reachable
        - 2. Check if variables defined adhere to the guidelines
